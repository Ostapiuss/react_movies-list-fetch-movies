{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addNewMovie","useState","setTitle","setMovie","hasError","setError","findMovies","a","endPointTitle","fetch","then","response","json","catch","Error","newMovie","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","state","data","updateMovie","find","setState","prevState","_","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0b5c94d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies,\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\n\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({});\n  const [hasError, setError] = useState(false);\n\n  const addTitle = (event) => {\n    const { value } = event.target;\n\n    setTitle(value);\n\n    setError(false);\n  };\n\n  const findMovies = async() => {\n    const newMovie = await request(title);\n\n    if (newMovie.Error) {\n      setError(true);\n    }\n\n    setMovie({\n      title: newMovie.Title,\n      description: newMovie.Plot,\n      imgUrl: newMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n      imdbId: newMovie.imdbID,\n    });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          addNewMovie(movie);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': hasError })}\n              value={title}\n              onChange={addTitle}\n            />\n          </div>\n\n          <p className={classNames('help', { 'is-danger': hasError })}>\n            {hasError && (\n              <p>Can&apos;t find a movie with such a title</p>\n            )}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovies}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie.title && (\n          <MovieCard\n            title={movie.title}\n            description={movie.description}\n            imgUrl={movie.imgUrl}\n            imdbUrl={`https://www.imdb.com/title/${movie.imdbUrl}`}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = PropTypes.shape({\n  addNewMovie: PropTypes.func.isRequired,\n}).isRequired;\n","const BASE__URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=d49fb33b&t=';\n\nexport const request = endPointTitle => (\n  fetch(`${BASE__URL}${endPointTitle}`)\n    .then(response => response.json())\n    .catch(() => new Error('film not found'))\n);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n    newMovie: null,\n  };\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.newMovie !== this.state.newMovie) {\n      this.updateMovie();\n    }\n  }\n\n  updateMovie = () => {\n    const { newMovie, movies } = this.state;\n\n    const revise = movies.find(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!revise) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, prevState.newMovie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addNewMovie={(newMovie) => {\n            this.setState({\n              newMovie,\n            });\n          }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}